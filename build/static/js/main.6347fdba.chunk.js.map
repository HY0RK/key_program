{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["url","require","removeAmp","input","type","console","log","output","map","str","includes","replace","getKeys","a","fetch","method","headers","then","response","ok","json","getKeyTypes","_idToUpdate","newKey","tempKey","toUpdate","updatedKey","body","JSON","stringify","updateKeyTypes","props","cleanProps","getKeyHistory","_id","newOwner","owner","functions","typeClean","number","issueDate","returnDate","key_id","filterVars","trueKeyList","updateTrueKeyList","setTrueKeyList","updatedFilter","updateFilter","setKeyList","KeyTypeDropdown","keyTypes","children","setNewKeyType","newKeyType","tempArray","keyType","keyDropdown","Dropdown","Item","name","onClick","push","DropdownButton","title","AddModal","useState","checkDisabled","setCheckDisabled","newKeyNumber","setNewKeyNumber","newKeyOwner","setNewKeyOwner","typeOther","setTypeOther","handleChange","e","target","value","NaN","parseInt","prepKey","Date","toDateString","onHide","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Row","Col","className","InputGroup","FormControl","onChange","Button","aria-label","placeholder","onKeyPress","charCode","Footer","disabled","ListKeyTypes","index","Badge","variant","pill","removeKeyType","KeyTypeAdmin","setKeyTypes","addKeyType","newKeyTypes","xs","style","Prepend","Text","Append","preSplit","slice","postSplit","concat","AdminModal","IssueModal","setNewOwner","issueModalIndex","submitIssue","issueFunc","KeyHistory","keyHistoryLoading","setKeyHistoryLoading","keyHistoryLoaded","setKeyHistoryLoaded","outputArray","setOutputArray","key","useEffect","localKeyHistory","autofill","temp","reverse","hrStyle","Spinner","animation","role","KeyModal","modifyKey","setModifyKey","undefined","block","updateKeyList","ListKeys","keyOutput","keyList","showKeyModal","setShowKeyModal","modalKey","setModalKey","keyModalIndex","setModalKeyIndex","returnFunc","issueModal","keyIndex","keyModal","KeyFormat","tempKeyList","updateKey","show","filters","filterList","Object","entries","filter","toString","filterFlattened","tempFilterList","length","filtered_id","Filter","setFilterVars","filtering","typeFilter","numberFilter","ownerFilter","issueDateFilter","returnDateFilter","keys","App","keysLoaded","setKeysLoaded","keysLoading","setKeysLoading","date","result","addModalShow","setAddModalShow","adminModalShow","setAdminModalShow","issueModalShow","setIssueModalShow","setIssueModalIndex","showFilter","setShowFilter","updateType","archiveKey","archiveDbUpdate","addKey","keyDbUpdate","returnKey","returnKeyList","returnDbUpdate","issueKey","issueKeyList","issueDbUpdate","Container","fluid","sm","lg","filteredList","newFilter","updatedKeyList","updatedKeyTypes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6347fdba.chunk.js","sourcesContent":["import './App.css';\nimport {Container, Row, Col, Button, Modal, Badge, InputGroup, FormControl, DropdownButton, Dropdown, Spinner, Form} from 'react-bootstrap'\nimport { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst crypto = require('crypto');\n\nconst url = \"http://192.168.2.6:3001/\" \n// const url = \"http://10.221.224.233:4001/\"\n\nconst removeAmp = input => {\n  const type = typeof(input)\n  console.log(type)\n  let output = input;\n  if (type === \"object\") {\n    output = input.map(str => {\n      if (str.includes(\"&\")){\n         str = str.replace(\"&\", \"%26\")\n      }\n      return str\n    })\n  } else if (type === \"string\") {\n    if (input.includes(\"&\")) {\n      output = input.replace(\"&\", \"%26\")\n    }\n  }\n  console.log(output)\n\n  return output;\n}\nasync function getKeys() {\n  \n  return fetch(url + \"keys\", {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response)\n    }\n  }).then((response) => response)\n}\nasync function login(props) {\n  return fetch (url + \"login\", {\n    method: \"POST\",\n    body: \"passphrase=\" + props,\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return false\n    }\n  }).then((response) => {\n    if (!response) {\n      return false;\n    } else {\n      if (response.login){ // note that response contains the type of account allowing\n        // for an admin panel that allows addition of users and the loaning/returning of keys and\n        // a user panel that can only view and possibly issue\n        return true\n      } else {\n        return false\n      }\n    }\n  })\n}\n\nasync function getKeyTypes(){\n  return fetch(url + \"keyTypes\", {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response)\n    }\n  }).then((response) => response)\n}\n\nasync function updateKey(_idToUpdate, newKey){\n  let tempKey = {...newKey}\n  let type = newKey.type;\n  type = removeAmp(type)\n  tempKey.type = type;\n  const toUpdate = {\n    _idToUpdate: _idToUpdate,\n    updatedKey: tempKey\n  };\n  return fetch(url + \"updateKey\", {\n    method: \"POST\",\n    body: \"toUpdate=\" + JSON.stringify(toUpdate),\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  }).then(response => {\n    console.log(response)\n  })\n}\n\nasync function  updateKeyTypes(props) {\n  const cleanProps = removeAmp(props)\n  const body = 'newKeyTypes=' + JSON.stringify(cleanProps)\n  console.log(body)\n  fetch (url + \"updateKeyTypes\", {\n    method: \"POST\",\n    body:body,\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json()\n    }\n  }).then(response => {\n    console.log(response)\n  })\n}\n\nasync function getKeyHistory(props) {\n  return fetch(url + \"keyHistory\", {\n    method: \"POST\", // should change this over to a GET request and just put the id in the url\n    body: \"_id=\" + props,\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  }).then(response => {\n    return response.response\n  })\n}\nasync function issueDbUpdate(props) {\n  const toUpdate = {\n    _id: props._id,\n    newOwner: props.owner\n  }\n  return fetch(url + \"issueKey\", {\n    method: \"POST\",\n    body : \"toUpdate=\" + JSON.stringify(toUpdate),\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n    } else {\n      console.log(response)\n    }\n  })\n}\n\nasync function returnDbUpdate(props) {\n  const  toUpdate = {\n    _id: props\n  }\n    return fetch(url + \"returnKey\", {\n    method: \"POST\",\n    body: \"toUpdate=\" + JSON.stringify(toUpdate),\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n\n    } else {\n      console.log(response)\n    }\n  })\n}\n\nasync function keyDbUpdate(props, functions) {\n  const typeClean = removeAmp(props.type)\n  const body = {\n    number: props.number,\n    type: typeClean,\n    owner: props.owner,\n    issueDate: props.issueDate,\n    returnDate: props.returnDate,\n  }\n  await fetch(url + \"addKey\", {\n    method: \"POST\",\n    body: \"toAdd=\" + JSON.stringify(body),\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then((response) => {\n    if (response.ok) {\n        return response.json()\n    } else {\n      console.log(response[0])\n    }\n  }).then (response => {\n    body._id = response.key_id;\n    body.type = props.type;\n    const filterVars = functions.filterVars\n    const trueKeyList = functions.updateTrueKeyList(null, \"add\", body)\n    functions.setTrueKeyList(trueKeyList);\n    const updatedFilter = functions.updateFilter(filterVars, trueKeyList)\n    functions.setKeyList(updatedFilter)\n    \n  })\n}\n\nasync function archiveDbUpdate(props) {\n  fetch(url + \"archive\", {\n    method: \"POST\",\n    body: \"toArchive=\" + JSON.stringify(props),\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      console.log(response.json())\n    }\n  })\n}\n\nfunction KeyTypeDropdown(props) {\n  const keyTypes = props.children.keyTypes\n  const setNewKeyType = props.children.setNewKeyType;\n  const newKeyType = props.children.newKeyType;\n  let tempArray = []\n  keyTypes.map(keyType => {\n    const keyDropdown = <Dropdown.Item key={keyType} name=\"type\" onClick={() => setNewKeyType(keyType)}>{keyType}</Dropdown.Item>\n    tempArray.push(keyDropdown)\n  })\n  tempArray = (\n    <DropdownButton title={newKeyType}>\n      {tempArray}\n    </DropdownButton>\n  )\n  return(tempArray)\n}\n\nfunction AddModal(props) {\n  const [checkDisabled, setCheckDisabled] = useState(false) \n  const [newKeyNumber, setNewKeyNumber] = useState(\"\")\n  const [newKeyType, setNewKeyType] = useState(\"\")\n  const [newKeyOwner, setNewKeyOwner] = useState(\"\")\n  const [typeOther, setTypeOther] = useState(false)\n  const resetModal = () => {\n    setCheckDisabled(false)\n    setNewKeyNumber(\"\")\n    setNewKeyType(\"\")\n    setNewKeyOwner(\"\")\n    setTypeOther(false)\n  }\n  const handleChange = e => {\n    const { target : {value, name} } = e\n    switch (name) {\n      case \"number\":\n        if (value !== null && value !== \"\") {\n          if (setNewKeyNumber(parseInt(value) !== NaN)) {\n            setNewKeyNumber(parseInt(value))\n          }\n          else {\n            setNewKeyNumber(value)\n          }\n          setCheckDisabled(false)\n        } else if (!checkDisabled){\n          setNewKeyNumber(value)\n          setCheckDisabled(true)\n        }\n        break;\n      case \"owner\":\n        setNewKeyOwner(value)\n        break;\n      case \"typeOther\":\n        setNewKeyType(value)\n        break;\n      default:\n   }\n    \n  }\n  const enterSubmit = e => {\n    if (e.charCode === 13) {\n      prepKey()\n    }\n  }\n  const prepKey = () => {\n    let newKey = {\n      type: newKeyType,\n      number: newKeyNumber,\n      owner: newKeyOwner,\n      issueDate: \"\",\n      returnDate: \"\"\n    }\n    if (newKey.owner != null && newKey.owner != \"\"){\n      newKey.issueDate = new Date().toDateString()\n    }\n    props.children.newKey(newKey)\n    props.onHide()\n    resetModal()\n\n  }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Add Key\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col>Key Type</Col>\n          <Col>Key #</Col>\n          <Col>Issued To</Col>\n        </Row>\n        <Row>\n          {!typeOther &&\n            <Col className=\"justify-content-md-center\">\n              <KeyTypeDropdown \n                children={{\n                  keyTypes: props.children.keyTypes,\n                  newKeyType: newKeyType,\n                  setNewKeyType: newKeyType => setNewKeyType(newKeyType)\n                }}\n              />\n            </Col>\n          }\n          {typeOther &&\n            <Col>\n              <InputGroup>\n                <FormControl value={newKeyType} name=\"typeOther\" onChange={handleChange}/>\n                <Button onClick={() => setTypeOther(false)}>Reset</Button>\n              </InputGroup>\n              \n            </Col>\n          }\n          <Col>\n            <InputGroup>\n              <FormControl value={newKeyNumber} name=\"number\" onChange={handleChange}  aria-label=\"With textarea\" />\n            </InputGroup>\n          </Col>\n          <Col>\n            <InputGroup>\n              <FormControl placeholder=\"Leave blank if not issued\" name=\"owner\" onChange={handleChange} aria-label=\"Issued to \" onKeyPress={enterSubmit}/>\n            </InputGroup>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button disabled={checkDisabled} onClick={prepKey} >Add</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nfunction ListKeyTypes(props) {\n  const keyTypes = props.children.keyTypes;\n  let tempArray = [];\n  keyTypes.map((keyType, index) => {\n    tempArray.push(\n      <Badge size=\"lg\" variant=\"secondary\" pill key={keyType}>\n        <Col>\n          {keyType}\n          {' '}\n          <Button size='sm' variant=\"secondary\" value={index}  name={keyType} onClick={props.children.removeKeyType}>x</Button>\n        </Col>\n      </Badge>\n    )\n  })\n  tempArray = (\n    <>\n      {tempArray}\n    </>\n  )\n  return tempArray\n}\n\nfunction KeyTypeAdmin(props) {\n  const keyTypes = props.children.keyTypes;\n  const setKeyTypes = props.children.setKeyTypes;\n  const [newKeyType, setNewKeyType] = useState(\"\")\n  const resetModal = () => {\n    setNewKeyType(\"\")\n  }\n  const removeKeyType = e => {\n    const {target: {value, name}} = e;\n    const preSplit = keyTypes.slice(0, value)\n    const postSplit = keyTypes.slice(parseInt(value) + 1)\n    const newKeyTypes = preSplit.concat(postSplit)\n    setKeyTypes(newKeyTypes)\n    updateKeyTypes(newKeyTypes)\n  }\n  const addKeyType = () => {\n    let newKeyTypes = keyTypes\n    newKeyTypes.push(newKeyType)\n    updateKeyTypes(newKeyTypes);\n    setKeyTypes(newKeyTypes);\n    resetModal();\n  }\n  const enterSubmit = e => {\n    if (e.charCode === 13) {\n      addKeyType()\n    }\n  }\n  const handleChange = e => {\n    const {target: {value}} = e;\n    setNewKeyType(value)\n  }\n  return (\n    <>\n      <Row>\n        <Col xs={12} >\n          <div style={{\"borderBottom\": \"solid\", \"borderColor\":\"grey\"}}>\n            Key Types              \n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={6}>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>Add Type</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl value={newKeyType} onChange={handleChange} onKeyPress={enterSubmit}></FormControl>\n          <InputGroup.Append>\n            <Button onClick={() => addKeyType()}>Add</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        </Col>\n        <Col xs={6}>\n          \n          <Row>\n            <Col>\n              <ListKeyTypes \n                children={{\n                  keyTypes: keyTypes,\n                  removeKeyType: removeKeyType\n                }}\n              />\n            </Col>\n            {/* use pills to list out all of the existing types */}\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction AdminModal(props) {\n  const keyTypes = props.children.keyTypes;\n  const setKeyTypes = props.children.setKeyTypes;\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Admin\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <KeyTypeAdmin \n          children={{\n            keyTypes: keyTypes,\n            setKeyTypes: setKeyTypes\n          }}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        {/* <Button disabled={checkDisabled} onClick={submitIssue}>Add</Button> */}\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nfunction IssueModal(props) {\n  const [newOwner, setNewOwner] = useState(null)\n  const [checkDisabled, setCheckDisabled] = useState(true)\n  const issueModalIndex = props.children.issueModalIndex\n\n  const handleChange = e => {\n    const { target : {value, name} } = e\n    setNewOwner(value)\n    if (value !== \"\" && value != null) {\n      setCheckDisabled(false)\n    } else {\n      setCheckDisabled(true)\n    }\n\n  }\n  const resetModal = () =>{\n    setNewOwner(\"\");\n    setCheckDisabled(true);\n  }\n  const submitIssue = () => {\n    if (newOwner !== null && newOwner !== \"\"){\n      props.children.issueFunc({newOwner,issueModalIndex})\n      resetModal()\n    }\n  }\n  const enterSubmit = e => {\n    if (e.charCode === 13) {\n      submitIssue()\n    }\n  }\n  return (\n    <Modal\n      {...props}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Issue Key\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Col>\n          <InputGroup>\n            <FormControl onChange={handleChange} onKeyPress={enterSubmit}/>\n          </InputGroup>\n        </Col>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button disabled={checkDisabled} onClick={submitIssue}>Add</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\nfunction KeyHistory(props) {\n  const [keyHistoryLoading, setKeyHistoryLoading] = useState(false) \n  const [keyHistoryLoaded, setKeyHistoryLoaded] = useState(false)\n  const [outputArray, setOutputArray] = useState([])\n  const _id = props.children.key._id\n\n  useEffect(async () => {\n    if (!keyHistoryLoading) {\n      setKeyHistoryLoading(true);\n      const localKeyHistory = await getKeyHistory(_id);\n      if (typeof(localKeyHistory) === \"object\" ) {\n        autofill(localKeyHistory)\n        setKeyHistoryLoaded(true);\n      } else {\n        setOutputArray((\n          <Row>\n            <Col> \n              No history for this key\n            </Col>\n          </Row>\n        ))\n        setKeyHistoryLoaded(true)\n      }\n    }\n  })\n  const autofill = localKeyHistory => {\n    let temp = [];\n    // const tempKeyHistory = keyHistory;\n    localKeyHistory.slice(0).reverse().map(key => {\n      temp.push(\n        <div key={key._id}>\n        <hr style={props.children.hrStyle} />\n        <Row>\n          <Col>{key.owner}</Col>\n          <Col>{key.issueDate}</Col>\n          <Col>{key.returnDate}</Col>\n        </Row>\n        </div>\n      )\n    })\n   setOutputArray(temp)\n  }\n\n  if (!keyHistoryLoaded && keyHistoryLoading) {\n    return (\n      <>\n        Loading History...{' '}\n        <Spinner size=\"sm\" animation=\"border\" role=\"status\">\n          <span ></span>\n        </Spinner>\n      </>\n    )\n  } else {\n    return (\n      <>\n        {outputArray}\n      </>\n    )\n  }\n  \n}\n\nfunction KeyModal(props) {\n  const key = props.children.key;\n  const temp = {\n    _id: key._id,\n    type: key.type,\n    number: key.number,\n    owner: key.owner,\n    issueDate: key.issueDate,\n    returnDate: key.returnDate\n  }\n  const [modifyKey, setModifyKey] = useState(\"\");\n  if (temp._id !== undefined && modifyKey === \"\") {\n    setModifyKey(temp)\n  } else if (modifyKey._id !== key._id ) {\n    setModifyKey(temp)\n  }\n  const updateKey = () => {\n    props.children.updateKeyList(modifyKey)\n  }\n  const hrStyle = {\n   \"backgroundColor\": \"black\",\n  }\n  const handleChange = e => {\n    const { target: {value, name}} = e;\n    var tempKey = temp\n    switch(name) {\n      case 'keyType': \n        tempKey.type = value\n        setModifyKey(tempKey) \n        break;\n      case 'keyOwner':\n        tempKey.owner = value\n        setModifyKey(tempKey)\n        break;\n      case \"keyIssueDate\":\n        tempKey.issueDate = value\n        setModifyKey(tempKey)\n        break;\n      case \"keyNumber\":\n        tempKey.number = value\n        setModifyKey(tempKey)\n      default:\n        break;\n    }\n  }\n  return (\n    <Modal \n      {...props}\n      aria-labelledby=\"contained-modal-tittle-vcenter\"\n      centered\n      size=\"lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Key: {modifyKey.number}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col>\n            Key Type:\n            <InputGroup>\n              <FormControl name=\"keyType\" value={modifyKey.type} onChange={handleChange}></FormControl>\n            </InputGroup>\n          </Col>\n          <Col>\n            Issued To:\n            <InputGroup>\n              <FormControl name=\"keyOwner\" value={modifyKey.owner} onChange={handleChange}></FormControl>\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            Key Number:\n            <InputGroup>\n              <FormControl name=\"keyNumber\" value={modifyKey.number} onChange={handleChange}></FormControl>\n            </InputGroup>\n          </Col>\n          <Col>\n            Issue Date:\n            <InputGroup>\n              <FormControl name=\"keyIssueDate\" value={modifyKey.issueDate} onChange={handleChange}></FormControl>\n            </InputGroup>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Button block onClick={updateKey}>\n            Update\n          </Button>\n        </Row>\n        \n        <br />\n        <Row>\n          <Col><h4>History</h4></Col>\n        </Row>\n        <Row>\n          <Col>\n            Issued to:\n          </Col>\n          <Col>\n            Issue date:\n          </Col>\n          <Col >\n            Return date:\n          </Col>\n        </Row>\n        <KeyHistory\n          children={{\n            hrStyle: hrStyle,\n            key: modifyKey\n          }}\n        />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction KeyFormat(key, index, functions, keyModal) {\n  const onClickHandler = () => {\n    functions.keyIndex(index)\n    functions.issueModal(index)\n  }\n  return (\n    <div key={index}>\n      <hr />\n      <Row>\n        <Col>{key.type}</Col>\n        <Col>{key.number}</Col>\n        <Col>{key.owner}</Col>\n        <Col>{key.issueDate}</Col>\n        <Col>{key.returnDate}</Col>\n        <Col>\n          {key.owner !== \"\" && key.owner !== null &&\n            <Button block variant=\"warning\" onClick={() => functions.returnFunc(index)}>Return</Button>\n          }\n          {key.owner === \"\" && key.owner !== null &&\n            <Button block variant=\"success\" onClick={onClickHandler}>Issue Key</Button>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n            {/* <Button block variant=\"outline-info\" >details</Button> */}\n            <Button block variant=\"info\" onClick={() => keyModal(index)}>details</Button>\n\n          </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction ListKeys(props) {\n  var keyOutput;\n  const setKeyList = props.children.setKeyList\n  const keyList = props.children.keyList\n  const updateTrueKeyList = props.children.updateTrueKeyList;\n  const [showKeyModal, setShowKeyModal] = useState(false);\n  const [modalKey, setModalKey] = useState({})\n  const [keyModalIndex, setModalKeyIndex] = useState(-1)\n  const functions = {\n    returnFunc: props.children.returnFunc,\n    issueModal: props.children.issueModal,\n    keyIndex: props.children.keyIndex,\n  }\n  const keyModal = (index) => {\n    setModalKey(keyList[index])\n    setModalKeyIndex(index)\n    setShowKeyModal(true)\n  }\n  keyOutput = keyList.map(((key, index) =>\n    KeyFormat(key, index, functions, keyModal)\n  ))\n  const updateKeyList = (newKey) => {\n    let tempKeyList = [...keyList];\n    const _idToUpdate = tempKeyList[keyModalIndex]._id;\n    const tempKey = tempKeyList[keyModalIndex];\n    updateTrueKeyList(_idToUpdate, \"update\", newKey)\n    tempKeyList[keyModalIndex] = newKey\n    updateKey(_idToUpdate, newKey)\n    setKeyList(tempKeyList)\n    setShowKeyModal(false)\n  }\n  return(\n    <>\n      {keyOutput}\n\n      <KeyModal\n        show={showKeyModal}\n        onHide={() => setShowKeyModal(false)}\n        children = {{\n          key: modalKey,\n          updateKeyList: newKey => updateKeyList(newKey)\n        }}\n      />\n    </>\n  )\n}\n\nconst updateFilter = (filters, trueKeyList) => {\n    let filterList = {\n      type: [],\n      number:[],\n      owner:[],\n      issueDate:[],\n      returnDate:[]\n    }\n    trueKeyList.map(key => {\n      Object.entries(filters).map(filter => {\n        if (filter[1] !== \"\" && filter[1] !== null && filter[1] !== undefined) {\n          switch (filter[0]) {\n            case \"typeFilter\":\n              if (key.type.includes(filter[1])){\n                filterList.type.push(key._id);\n              }\n              break;\n            case \"numberFilter\":\n              if (key.number.toString().includes(filter[1])){\n                filterList.number.push(key._id);\n              }\n              \n              break;\n            case \"ownerFilter\":\n              if (filter[1] === \"0\" && key.owner === \"\") {\n                filterList.owner.push(key._id)\n              } else if (filter[1] === \"1\" && key.owner !== \"\") {\n                filterList.owner.push(key._id)\n              } else {\n\n                if (key.owner.includes(filter[1])) {\n                  filterList.owner.push(key._id);\n                }\n              }\n              break;\n            case \"issueDateFilter\":\n              if (key.issueDate.includes(filter[1])) {\n                filterList.issueDate.push(key._id);\n              }\n              break;\n            case \"returnDateFilter\":\n              if (key.returnDate.includes(filter[1])) {\n                filterList.returnDate.push(key._id);\n              }\n              break;\n            default:\n              break;\n          }\n        } else {\n          switch (filter[0]) {\n            case \"typeFilter\":\n              filterList.type = null;\n              break;\n            case \"numberFilter\":\n              filterList.number = null;\n              break;\n            case \"ownerFilter\":\n              filterList.owner = null;\n              break;\n            case \"issueDateFilter\":\n              filterList.issueDate = null;\n              break;\n            case \"returnDateFilter\":\n              filterList.returnDate = null;\n              break;\n            default:\n              break;\n\n          }\n        }\n      })\n    })\n    let filterFlattened = [];\n    let tempFilterList = [];\n    Object.entries(filterList).map(filter => {\n      if (filter[1] !== null && filter[1] !== \"\"){\n        if (filterFlattened.length < 1) {\n          filterFlattened.push(filter[1])\n        } else {\n          filterFlattened[0].map((filtered_id, index)=> {\n            if(!filter[1].includes(filtered_id)) {\n              if (!tempFilterList.includes(index)) {\n                tempFilterList.push(index)\n              }\n            }\n          })\n        }\n      }\n    })\n    tempFilterList.map(index => {\n      filterFlattened[0][index] = \"\"\n    })\n    let tempKeyList = []\n    if (filterFlattened.length > 0){\n      filterFlattened[0].map(key_id=> {\n        if (key_id !== \"\"){\n          trueKeyList.map(key => {\n            if (key._id === key_id) {\n              tempKeyList.push(key)\n            }\n          })\n        }\n      })\n      return tempKeyList\n    } else {\n      return(trueKeyList)\n    }\n    \n}\n\nfunction Filter(props) { \n  let filters = props.children.filterVars;\n  const trueKeyList = props.children.trueKeyList;\n  const resetFilters = () => {\n    Object.keys(filters).map(name => {\n      filters[name] = \"\"\n    })\n    props.children.setFilterVars(filters);\n    props.children.setKeyList(trueKeyList);\n  }\n  const filtering = (value, name) => {    \n    filters[name] = value\n    props.children.setFilterVars(filters);\n    props.children.setKeyList(updateFilter(filters, trueKeyList))\n  }\n  const handleChange = e => {\n    const { target : {value, name} } = e\n    filtering(value, name);\n  }\n  // next step is to connect in a keyList state function to update the current list with \n  return (\n    <>  \n      <Row>\n        <Col>\n          <InputGroup>\n            <FormControl name=\"typeFilter\" value={filters.typeFilter} onChange={handleChange}/>\n        </InputGroup>\n        </Col>\n        <Col>\n          <InputGroup>\n            <FormControl name=\"numberFilter\" value={filters.numberFilter} onChange={handleChange}/>\n          </InputGroup>\n        </Col>\n        <Col>\n          <InputGroup>\n            <FormControl name=\"ownerFilter\" value={filters.ownerFilter} onChange={handleChange}/>\n          </InputGroup>\n        </Col>\n        <Col>\n          <InputGroup>\n            <FormControl name=\"issueDateFilter\" value={filters.issueDateFilter} onChange={handleChange}/>\n          </InputGroup>\n        </Col>\n        <Col>\n          <InputGroup>\n            <FormControl name=\"returnDateFilter\" value={filters.returnDateFilter} onChange={handleChange}/>\n          </InputGroup>\n        </Col>\n        <Col>\n        <Button block onClick={resetFilters} >reset</Button>\n        </Col>\n      </Row>\n      \n    </>\n  )\n}\nfunction Login(props) {\n  const [passphrase, setPassphrase] = useState([\"\"]);\n  const handleChange = e => {\n    e.preventDefault()\n    const {target: {value}} = e\n    setPassphrase(value)\n  }\n  const enterSubmit = e => {\n    if (e.charCode === 13) {\n      handleClick()\n    }\n  }\n  const handleClick = async () => {\n    const hash = crypto.createHash('sha256');\n    hash.update(passphrase)\n    const loginRes = await login(hash.digest(\"hex\"))\n    // login function contains user info which can be brought in to allow the implementation of user based adjustment\n    if (loginRes) {\n      props.children.setIsLoggedIn(true)\n    }\n  }\n  return (\n    <Container >\n      <Row >\n        <Col className=\"align-center\" >\n          <InputGroup>\n            <FormControl name=\"passphrase\" value={passphrase} onChange={handleChange} placeholder={\"passphrase\"} onKeyPress={enterSubmit}/>\n            <InputGroup.Append>\n              <Button onClick={() => handleClick()}>Login</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\n\nfunction App() {\n\n  const loginSet = false;\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n \n  const [trueKeyList, setTrueKeyList] = useState([])\n  const [keyList, setKeyList] = useState([])\n  const [keyTypes, setKeyTypes] = useState([])\n  const [keysLoaded, setKeysLoaded] = useState(false)\n  const [keysLoading, setKeysLoading] = useState(false)\n  const date = new Date().toDateString()\n  // used to get the keyList from mongo\n\n  // Check that you can't access this data outside the lock screen. Shouldn't run till logged in\n  useEffect(async () => {\n    // console.log(keyList)\n    if (!loginSet || isLoggedIn){\n      if (!keysLoaded && !keysLoading) {\n        setKeysLoading(true)\n        const result = await getKeys();\n        const keyTypes = await getKeyTypes();\n        setKeyTypes(keyTypes)\n        setKeyList(result)\n        setTrueKeyList(result)\n        setKeysLoaded(true)\n      }\n    }\n  })\n  \n  const [addModalShow, setAddModalShow] = useState(false)\n  const [adminModalShow, setAdminModalShow] = useState(false)\n  const [issueModalShow, setIssueModalShow] = useState(false)\n  const [issueModalIndex, setIssueModalIndex] = useState(null)\n  const [showFilter, setShowFilter] = useState(false)\n  const [filterVars, setFilterVars] = useState({\n    typeFilter:\"\",\n    numberFilter:\"\",\n    ownerFilter:\"\",\n    issueDateFilter:\"\",\n    returnDateFilter:\"\",\n  })\n  const updateTrueKeyList = (_idToUpdate, updateType, props) => {\n    let tempKeyList = [...trueKeyList];\n    switch (updateType) {\n      case \"add\":\n        tempKeyList.push(props)\n        break;\n      default:\n        tempKeyList.map(key => {\n          if (key._id === _idToUpdate) {\n            switch(updateType) {\n              case \"return\":\n                key.owner = \"\";\n                key.returnDate = date;\n                break;\n              case \"issue\":\n                key.owner = props;\n                key.issueDate = date;\n                key.returnDate = \"\";\n                break;\n              case \"update\":\n                key.type = props.type;\n                key.owner = props.owner;\n                key.issueDate = props.issueDate;\n                key.number = props.number\n                break\n            }\n          }\n        });\n        break\n    }\n    setTrueKeyList(tempKeyList)\n    return(tempKeyList)\n  }\n  const archiveKey = key => {\n    const prepKey = {\n      key_id: key._id,\n      owner: key.owner,\n      issueDate: key.issueDate,\n      returnDate: date\n    }\n    archiveDbUpdate(prepKey)\n  }\n  const addKey = (props) => {\n    const trueKeyList = updateTrueKeyList(null, \"add\", props)\n    setKeyList(updateFilter(filterVars, trueKeyList))\n    // keyDbUpdate(props)\n    const functions = {\n      updateTrueKeyList: updateTrueKeyList,\n      setTrueKeyList: setTrueKeyList,\n      updateFilter: updateFilter,\n      filterVars: filterVars,\n      setKeyList: setKeyList,\n    }\n    keyDbUpdate(props, functions)\n  }\n  const returnKey  = index => {\n    let returnKeyList = [...keyList]\n    archiveKey(returnKeyList[index])\n    const _idToUpdate = returnKeyList[index]._id\n    const trueKeyList = updateTrueKeyList(_idToUpdate, \"return\");       \n    setKeyList(updateFilter(filterVars, trueKeyList));\n    returnDbUpdate(_idToUpdate)\n    \n  }\n  const issueKey = props => {\n    let issueKeyList = [...keyList];\n    const _idToUpdate = issueKeyList[props.issueModalIndex]._id;\n    issueKeyList[props.issueModalIndex].owner = props.newOwner;\n    issueKeyList[props.issueModalIndex].issueDate = new Date().toDateString()\n    issueKeyList[props.issueModalIndex].returnDate = \"\"\n    issueDbUpdate(issueKeyList[props.issueModalIndex])\n    const trueKeyList = updateTrueKeyList(_idToUpdate, \"issue\", props.newOwner) // updates keyList...\n    setKeyList(updateFilter(filterVars, trueKeyList))\n    setIssueModalShow(false)\n  }\n  const toggleFilter = () => {\n    if (showFilter) {\n      setShowFilter(false)\n    } else {\n      setShowFilter(true)\n    }\n  }\n  if (!isLoggedIn && loginSet){\n    return (\n      <Login\n        children={{\n          setIsLoggedIn: () => setIsLoggedIn(true)\n        }}\n      />\n    )\n    \n  } else {\n    return (\n      <Container fluid >\n        <div className=\"sticky-top\" style={{\"backgroundColor\":\"white\"}}>\n          <Row >\n            <Col>\n              <Button size=\"lg\" variant=\"success\" block onClick={() => setAddModalShow(true)}>Add Key</Button>\n            </Col>\n            <Col>\n            <Button size=\"lg\" block onClick={toggleFilter} variant=\"primary\">Search</Button>\n            </Col>\n            <Col sm={\"3\"} lg=\"2\">\n              <Button size = \"lg\" block onClick={() => setAdminModalShow(true)} variant=\"dark\" >Admin</Button>\n            </Col>\n          </Row>\n          {showFilter && keysLoaded && <Filter\n              children={{\n                keyList: keyList,\n                trueKeyList: trueKeyList,\n                setKeyList: filteredList => setKeyList(filteredList),\n                filterVars: filterVars,\n                setFilterVars: newFilter => setFilterVars(newFilter),\n              }}\n            />}\n          <Row>\n            <Col>Key Type</Col>\n            <Col>Key #</Col>\n            <Col>Issued To</Col>\n            <Col>Issue Date</Col>\n            <Col>Return Date</Col>\n            <Col></Col>\n          </Row>\n          <br/>\n        </div>\n        {keysLoaded &&\n          <>\n            <ListKeys\n              children={{\n                keyList:keyList,\n                setKeyList: updatedKeyList => setKeyList(updatedKeyList),\n                updateTrueKeyList: (_idToUpdate, updateType, props) => updateTrueKeyList(_idToUpdate, updateType, props),\n                returnFunc: index => returnKey(index),\n                issueModal: () => setIssueModalShow(true),\n                keyIndex: index => setIssueModalIndex(index),\n              }}\n            />\n            <IssueModal \n              show={issueModalShow}\n              onHide={() => setIssueModalShow(false)}\n              children={{\n                keyList: keyList,\n                issueFunc: props => issueKey(props),\n                issueModalIndex: issueModalIndex\n              }}\n            />\n            <AddModal\n              show={addModalShow}\n              onHide={() => setAddModalShow(false)}\n              children={{\n                  keyList: trueKeyList,\n                  newKey:newKey => addKey(newKey),\n                  keyTypes: keyTypes\n              }}\n            />\n            <AdminModal\n              show={adminModalShow}\n              onHide={() => setAdminModalShow(false)}\n              children={{\n                keyTypes: keyTypes,\n                setKeyTypes: updatedKeyTypes => setKeyTypes(updatedKeyTypes)\n              }}\n            />\n          </>\n        }\n      </Container>  \n    );\n  }\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}